{"version":3,"sources":["webpack://@block-cat/portlet-ui/webpack/bootstrap","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['extend']\"","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['app']\"","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['common/app']\"","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['components/IndexPage']\"","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['helpers/listItems']\"","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['utils/DiscussionControls']\"","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['components/DiscussionListItem']\"","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['components/DiscussionPage']\"","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['helpers/highlight']\"","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['helpers/icon']\"","webpack://@block-cat/portlet-ui/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@block-cat/portlet-ui/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['components/LinkButton']\"","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['utils/PostControls']\"","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['components/Dropdown']\"","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['components/CommentPost']\"","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['components/PostUser']\"","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['components/Link']\"","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['components/PostStream']\"","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['common/components/Link']\"","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['common/helpers/username']\"","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['common/helpers/userOnline']\"","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['components/SelectDropdown']\"","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['utils/ItemList']\"","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['common/components/SplitDropdown']\"","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['common/helpers/listItems']\"","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['common/components/Button']\"","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['components/Navigation']\"","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['components/Post']\"","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['helpers/avatar']\"","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['utils/abbreviateNumber']\"","webpack://@block-cat/portlet-ui/./node_modules/lodash-es/_freeGlobal.js","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['utils/escapeRegExp']\"","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['components/Modal']\"","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['components/LoadingPost']\"","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['components/PostMeta']\"","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['components/PostEdited']\"","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['utils/extractText']\"","webpack://@block-cat/portlet-ui/external \"flarum.core.compat['utils/humanTime']\"","webpack://@block-cat/portlet-ui/(webpack)/buildin/global.js","webpack://@block-cat/portlet-ui/./src/forum/settings/addEMoldovaButton.js","webpack://@block-cat/portlet-ui/./src/forum/settings/removePane.js","webpack://@block-cat/portlet-ui/./node_modules/lodash-es/_root.js","webpack://@block-cat/portlet-ui/./node_modules/lodash-es/_Symbol.js","webpack://@block-cat/portlet-ui/./node_modules/lodash-es/_arrayMap.js","webpack://@block-cat/portlet-ui/./node_modules/lodash-es/isArray.js","webpack://@block-cat/portlet-ui/./node_modules/lodash-es/_getRawTag.js","webpack://@block-cat/portlet-ui/./node_modules/lodash-es/_objectToString.js","webpack://@block-cat/portlet-ui/./node_modules/lodash-es/_baseGetTag.js","webpack://@block-cat/portlet-ui/./node_modules/lodash-es/isObjectLike.js","webpack://@block-cat/portlet-ui/./node_modules/lodash-es/isSymbol.js","webpack://@block-cat/portlet-ui/./node_modules/lodash-es/_baseToString.js","webpack://@block-cat/portlet-ui/./node_modules/lodash-es/toString.js","webpack://@block-cat/portlet-ui/./node_modules/lodash-es/escapeRegExp.js","webpack://@block-cat/portlet-ui/./src/forum/components/ArticleModal.js","webpack://@block-cat/portlet-ui/./src/forum/index.js","webpack://@block-cat/portlet-ui/./src/forum/settings/changePaths.js","webpack://@block-cat/portlet-ui/./src/forum/settings/changeIconFromMenu.js","webpack://@block-cat/portlet-ui/./src/forum/settings/removeLeftsideMenu.js","webpack://@block-cat/portlet-ui/./src/forum/settings/removeToolbar.js","webpack://@block-cat/portlet-ui/./src/forum/settings/removeActionItems.js","webpack://@block-cat/portlet-ui/./src/forum/settings/removeRightsideMenu.js","webpack://@block-cat/portlet-ui/./src/forum/settings/removeSidebarItems.js","webpack://@block-cat/portlet-ui/./src/forum/settings/changePostControls.js","webpack://@block-cat/portlet-ui/./src/forum/settings/removePostCount.js","webpack://@block-cat/portlet-ui/./src/forum/settings/removeReplyPlaceholder.js","webpack://@block-cat/portlet-ui/./src/forum/settings/removeTerminalPost.js","webpack://@block-cat/portlet-ui/./src/forum/settings/sidebarItems.js","webpack://@block-cat/portlet-ui/./src/forum/settings/CardItem.js","webpack://@block-cat/portlet-ui/./src/forum/settings/ActionItems.js","webpack://@block-cat/portlet-ui/./src/forum/settings/addArticleModal.js","webpack://@block-cat/portlet-ui/./src/forum/settings/removeArticleHeaderModal.js","webpack://@block-cat/portlet-ui/./src/forum/settings/addReplyButtonModal.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","constructor","freeGlobal","global","g","this","Function","e","window","freeSelf","self","arrayMap","array","iteratee","index","length","result","Array","isArray","objectProto","nativeObjectToString","toString","symToStringTag","undefined","getRawTag","isOwn","tag","unmasked","objectToString","baseGetTag","isObjectLike","isSymbol","symbolProto","symbolToString","baseToString","reRegExpChar","reHasRegExpChar","RegExp","source","escapeRegExp","string","test","replace","ArticleModal","oninit","vnode","discussion","attrs","includedPosts","firstPostControls","headerItemsFirstComment","params","requestParams","app","store","find","id","then","payload","included","discussionId","filter","record","type","relationships","data","map","getById","sort","a","b","createdAt","slice","setPosts","className","title","content","lastTime","postIds","items","post","time","PostComponent","postComponents","contentType","component","number","PostControls","controls","toArray","ItemList","add","PostUser","oncardshow","oncardhide","PostMeta","isEdited","isHidden","PostEdited","toISOString","dt","translator","trans","period","dayjs","fromNow","PostLoading","listItems","articleItems","posts","redraw","bySlug","page","near","SplitDropdown","icon","buttonClassName","accessibleToggleLabel","DiscussionControls","Modal","initializers","routes","routesCustom","JSON","parse","resources","attributes","keys","path","extend","IndexPage","defaultSettings","forum","attribute","search","stickyParams","allDiscussionsIcon","has","LinkButton","href","route","mainPageMenu","remove","view","toolbar","children","shift","refreshButton","markAllAsReadButton","DiscussionPage","discussionMenu","controlsButton","scrubberDiv","CommentPost","discussionControlsToPost","discussionData","discussionModerationControls","moderationControls","merge","postControlsUp","menuClassName","onshow","$","addClass","onhide","removeClass","override","Post","original","elementAttrs","classes","join","actionItems","footerItems","DiscussionListItem","postCount","pop","Navigation","emoldovaButton","history","pane","onmouseenter","show","onmouseleave","canGoBack","getBackButton","getPaneButton","class","active","target","getDrawerButton","PostStream","postReply","discuss","terminalPost","disable","element","items1","navItems","itemName","splice","items2","SelectDropdown","user","isUnread","isRead","showUnread","showRepliesCount","jumpTo","q","mostRelevantPost","phrase","highlightRegExp","trim","Math","min","lastPostNumber","lastReadPostNumber","displayName","tags","infoItems","x","Dropdown","onclick","markAsRead","highlight","votes","commentCount","viewCount","badges","avatar","tabindex","role","abbreviateNumber","tags_autor","info","main","openModal","modal","userOnline","username","context","canReply","Button","replyAction","session"],"mappings":"2BACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,I,gBClFrDhC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAe,Q,cCA5CnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAY,K,cCAzCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,e,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,yB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,sB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,kC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,8B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,sB,eCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,iB,6BCArB,SAASC,EAAgB1B,EAAGqB,GAMzC,OALAK,EAAkBzB,OAAO0B,gBAAkB,SAAyB3B,EAAGqB,GAErE,OADArB,EAAE4B,UAAYP,EACPrB,IAGcA,EAAGqB,GCLb,SAASQ,EAAeC,EAAUC,GAC/CD,EAASX,UAAYlB,OAAOY,OAAOkB,EAAWZ,WAC9CW,EAASX,UAAUa,YAAcF,EACjCH,EAAeG,EAAUC,G,iDCJ3BzC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,0B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,uB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,wB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,2B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,wB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,oB,gBCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,0B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,2B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,4B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,8B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,8B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,mB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,oC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,0B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,oB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,mB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,2B,8BCApC,YACA,IAAIQ,EAA8B,iBAAVC,GAAsBA,GAAUA,EAAOjC,SAAWA,QAAUiC,EAErED,Q,gCCHf3C,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,uB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,qB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,2B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,wB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,0B,iBCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,sB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,oB,cCApC,IAAIU,EAGJA,EAAK,WACJ,OAAOC,KADH,GAIL,IAECD,EAAIA,GAAK,IAAIE,SAAS,cAAb,GACR,MAAOC,GAEc,iBAAXC,SAAqBJ,EAAII,QAOrCjD,EAAOD,QAAU8C,G,gECHF,I,w9BCTA,I,4KCJXK,EAA0B,iBAARC,MAAoBA,MAAQA,KAAKxC,SAAWA,QAAUwC,KCE7DnC,GDCJ2B,KAAcO,GAAYH,SAAS,cAATA,ICHnB/B,OCiBHoC,MAXf,SAAkBC,EAAOC,GAKvB,IAJA,IAAIC,GAAS,EACTC,EAAkB,MAATH,EAAgB,EAAIA,EAAMG,OACnCC,EAASC,MAAMF,KAEVD,EAAQC,GACfC,EAAOF,GAASD,EAASD,EAAME,GAAQA,EAAOF,GAEhD,OAAOI,GCQME,EAFDD,MAAMC,QCpBhBC,EAAcjD,OAAOkB,UAGrBC,EAAiB8B,EAAY9B,eAO7B+B,EAAuBD,EAAYE,SAGnCC,GAAiB/C,EAASA,EAAOC,iBAAc+C,EA6BpCC,OApBf,SAAmB/C,GACjB,IAAIgD,EAAQpC,EAAe1B,KAAKc,EAAO6C,IACnCI,EAAMjD,EAAM6C,IAEhB,IACE7C,EAAM6C,SAAkBC,EACxB,IAAII,GAAW,EACf,MAAOpB,IAET,IAAIS,EAASI,EAAqBzD,KAAKc,GAQvC,OAPIkD,IACEF,EACFhD,EAAM6C,IAAkBI,SAEjBjD,EAAM6C,KAGVN,GClCLI,GAPclD,OAAOkB,UAOciC,SAaxBO,OAJf,SAAwBnD,GACtB,OAAO2C,GAAqBzD,KAAKc,ICT/B6C,GAAiB/C,EAASA,EAAOC,iBAAc+C,EAkBpCM,OATf,SAAoBpD,GAClB,OAAa,MAATA,OACe8C,IAAV9C,EAdQ,qBADL,gBAiBJ6C,IAAkBA,MAAkBpD,OAAOO,GAC/C+C,GAAU/C,GACVmD,GAAenD,ICINqD,OAJf,SAAsBrD,GACpB,OAAgB,MAATA,GAAiC,iBAATA,GCGlBsD,OALf,SAAkBtD,GAChB,MAAuB,iBAATA,GACXqD,GAAarD,IArBF,mBAqBYoD,GAAWpD,IChBnCuD,GAAczD,EAASA,EAAOa,eAAYmC,EAC1CU,GAAiBD,GAAcA,GAAYX,cAAWE,EA0B3CW,OAhBf,SAASA,EAAazD,GAEpB,GAAoB,iBAATA,EACT,OAAOA,EAET,GAAIyC,EAAQzC,GAEV,OAAOkC,EAASlC,EAAOyD,GAAgB,GAEzC,GAAIH,GAAStD,GACX,OAAOwD,GAAiBA,GAAetE,KAAKc,GAAS,GAEvD,IAAIuC,EAAUvC,EAAQ,GACtB,MAAkB,KAAVuC,GAAkB,EAAIvC,IA3BjB,IA2BwC,KAAOuC,GCN/CK,OAJf,SAAkB5C,GAChB,OAAgB,MAATA,EAAgB,GAAKyD,GAAazD,IClBvC0D,GAAe,sBACfC,GAAkBC,OAAOF,GAAaG,QAwB3BC,OAPf,SAAsBC,GAEpB,OADAA,EAASnB,GAASmB,KACAJ,GAAgBK,KAAKD,GACnCA,EAAOE,QAAQP,GAAc,QAC7BK,G,4QCdeG,G,2GACnBC,OAAA,SAAOC,GAAO,WACZ,YAAMD,OAAN,UAAaC,GAEbxC,KAAKyC,WAAazC,KAAK0C,MAAMD,WAE7BzC,KAAK2C,cAAgB,GAErB3C,KAAK4C,kBAAoB,GAEzB5C,KAAK6C,wBAA0B,GAE/B,IAAMC,EAAS9C,KAAK+C,gBACpBC,IAAIC,MAAMC,KAAK,cAAelD,KAAKyC,WAAWU,KAAML,GACjDM,MAAK,SAACX,GAEL,GAAIA,EAAWY,SAAWZ,EAAWY,QAAQC,SAAU,CACrD,IAAIX,EACEY,EAAed,EAAWU,KAEhCR,EAAgBF,EAAWY,QAAQC,SAChCE,QACC,SAACC,GAAD,MACkB,UAAhBA,EAAOC,MACPD,EAAOE,eACPF,EAAOE,cAAclB,YACrBgB,EAAOE,cAAclB,WAAWmB,KAAKT,KAAOI,KAE/CM,KAAI,SAACJ,GAAD,OAAYT,IAAIC,MAAMa,QAAQ,QAASL,EAAON,OAClDY,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,YAAcD,EAAEC,eACjCC,MAAM,EAAG,IAGZ,EAAKC,SAASzB,Q,EAStB0B,UAAA,WACE,MAAO,gB,EAGTC,MAAA,WACE,MAAO,I,EAITC,QAAA,WAAU,IACJC,EADI,OAIFC,EAAUzE,KAAKyC,WAAWgC,UAE1BC,EAAQ1E,KAAK2C,cAAckB,KAAI,SAACc,EAAMxH,GAC1C,IAAIoH,EACE7B,EAAQ,CAAE,aAAcvF,GAG9B,GAAIwH,EAAM,CACR,IAAMC,EAAOD,EAAKT,YACZW,EAAgB7B,IAAI8B,eAAeH,EAAKI,eAG9C,GAFAR,EAAUM,EAAgBA,EAAcG,UAAU,CAAEL,SAAU,GAEzC,GAAjBA,EAAKM,SAAe,CACtB,EAAKrC,kBAAoBsC,IAAaC,SAASR,EAAM,GAAMS,UAE3D,IAAMV,EAAQ,IAAIW,KAElBX,EAAMY,IACJ,OACAC,KAASP,UAAU,CACjBL,OACAa,WAAY,aACZC,WAAY,eAEd,KAGFf,EAAMY,IACJ,OACAI,KAASV,UAAU,CAAEL,UAGnBA,EAAKgB,aAAehB,EAAKiB,YAC3BlB,EAAMY,IAAI,SAAUO,KAAWb,UAAU,CAAEL,UAG7C,EAAK9B,wBAA0B6B,EAAMU,UAKvC1C,EAAMhE,IAAM,OAASiG,EAAKxB,KAC1BT,EAAM,aAAekC,EAAKkB,cAC1BpD,EAAM,eAAiBiC,EAAKM,SAC5BvC,EAAM,WAAaiC,EAAKxB,KACxBT,EAAM,aAAeiC,EAAKI,cAK1B,IAAMgB,EAAKnB,EAAOJ,EAEduB,EAAK,SACPxB,EAAU,CACR,SAAKF,UAAU,sBACb,cAAOrB,IAAIgD,WAAWC,MAAM,0CAA2C,CAAEC,OAAQC,QAAQb,IAAIS,EAAI,MAAMK,SAAQ,OAEjH7B,IAIJC,EAAWI,OAEXlC,EAAMhE,IAAM,OAAS+F,EAAQtH,GAE7BoH,EAAU8B,KAAYrB,YAGxB,OACE,uBAAKX,UAAU,mBAAsB3B,GAClC6B,MAQP,MAAO,CACL,SAAKF,UAAU,sBACb,YAAQA,UAAU,eAChB,YAAKiC,KAAUtG,KAAK6C,2BAEtB,YAAKyD,KAAUtG,KAAKuG,eAAenB,aAErC,SAAKf,UAAU,yBACb,SAAKA,UAAU,6BACb,QAAIA,UAAU,2CAA2CrE,KAAKyC,WAAW6B,UAE3E,SAAKD,UAAU,cAAcK,M,EAKnCN,SAAA,SAASoC,GAEPxG,KAAK2C,cAAgB6D,EACrBjJ,EAAEkJ,U,EASH1D,cAAA,WACC,MAAO,CACL2D,QAAQ,EACRC,KAAM,CAAEC,KAAM5G,KAAK4G,Q,EAStBL,aAAA,WACC,IAAM7B,EAAQ,IAAIW,KA8BlB,OA5BAX,EAAMY,IACJ,kBACAuB,KAAc7B,UACZ,CACE8B,KAAM,oBACNzC,UAAW,qBACX0C,gBAAiB,kBACjBC,sBAAuBhE,IAAIgD,WAAWC,MAAM,oEAE9CgB,IAAmB9B,SAASnF,KAAKyC,WAAYzC,MAAMoF,YAIjB,IAAlCpF,KAAK4C,kBAAkBlC,QACzBgE,EAAMY,IACJ,kBACAuB,KAAc7B,UACZ,CACE8B,KAAM,oBACNzC,UAAW,qBACX0C,gBAAiB,oBACjBC,sBAAuBhE,IAAIgD,WAAWC,MAAM,oEAE9CjG,KAAK4C,oBAKJ8B,G,GA5M+BwC,M,oBCQ1ClE,IAAImE,aAAa7B,IAAI,wBAAwB,WCtB9B,IAEL8B,EAEAC,EAFAD,EAASpE,IAAIoE,OAEbC,EAAeC,KAAKC,MAAMvE,IAAIY,KAAK4D,UAAU,GAAGC,WAAW,4BAGjE5J,OAAO6J,KAAKN,GAAQvD,KAAI,SAACnF,GAEjB2I,EAAarI,eAAeN,IAEG,KAA3B2I,EAAa3I,GAAKiJ,OAElB3E,IAAIoE,OAAO1I,GAAKiJ,KAAON,EAAa3I,GAAKiJ,SCJvDC,iBAAOC,IAAU9I,UAAW,YAAY,SAAS2F,GAE/C,IAAMoD,EAAkBR,KAAKC,MAAMvE,IAAI+E,MAAMC,UAAU,8BACjDlF,EAASE,IAAIiF,OAAOC,eAGiB,KAAvCJ,EAAgBK,oBAEdzD,EAAM0D,IAAI,mBAEZ1D,EAAMrC,QACJ,iBACAgG,IAAWrD,UACT,CACEsD,KAAMtF,IAAIuF,MAAM,QAASzF,GAEzBgE,KAAMgB,EAAgBK,oBAExBnF,IAAIgD,WAAWC,MAAM,0CAEvB,QCrBR2B,iBAAOC,IAAU9I,UAAW,gBAAgB,SAAS2F,GAE3B4C,KAAKC,MAAMvE,IAAI+E,MAAMC,UAAU,8BAGnCQ,cAEd9D,EAAM0D,IAAI,QAEZ1D,EAAM+D,OAAO,UCRnBb,iBAAOC,IAAU9I,UAAW,QAAQ,SAAS2J,GAEnBpB,KAAKC,MAAMvE,IAAI+E,MAAMC,UAAU,8BAGnCW,SAElBD,EAAKE,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGA,SAASC,WCNtDjB,iBAAOC,IAAU9I,UAAW,eAAe,SAAS2F,GAElD,IAAMoD,EAAkBR,KAAKC,MAAMvE,IAAI+E,MAAMC,UAAU,8BAGnDF,EAAgBgB,eAEdpE,EAAM0D,IAAI,YAEZ1D,EAAM+D,OAAO,WAIbX,EAAgBiB,qBAEdrE,EAAM0D,IAAI,kBAEZ1D,EAAM+D,OAAO,oBCnBnBb,iBAAOoB,IAAejK,UAAW,QAAQ,SAAS2J,GAKhD,GAHwBpB,KAAKC,MAAMvE,IAAI+E,MAAMC,UAAU,8BAGnCiB,eAClB,IAEEP,EAAKE,SAAS,GAAGA,SAAS,GAAGA,SAASC,QACtC,cCPNjB,iBAAOoB,IAAejK,UAAW,gBAAgB,SAAS2F,GAExD,IAAMoD,EAAkBR,KAAKC,MAAMvE,IAAI+E,MAAMC,UAAU,8BAGnDF,EAAgBoB,gBAEdxE,EAAM0D,IAAI,aAEZ1D,EAAM+D,OAAO,YAIbX,EAAgBqB,aAEdzE,EAAM0D,IAAI,aAEZ1D,EAAM+D,OAAO,eCZnBb,iBAAOwB,IAAYrK,UAAW,eAAe,SAAS2F,GAAO,WAErDoD,EAAkBR,KAAKC,MAAMvE,IAAI+E,MAAMC,UAAU,8BAEjD7C,EAAWD,IAAaC,SAASnF,KAAK0C,MAAMiC,KAAM3E,MAGxD,GAAI8H,EAAgBuB,0BAEe,IAA7BrJ,KAAK0C,MAAMiC,KAAKM,SAAgB,CAElC,IAAMqE,EAAiBtJ,KAAK0C,MAAMiC,KAAKf,KAAKD,cAAclB,WAAWmB,KAE/DnB,EAAaO,IAAIC,MAAMa,QAAQwF,EAAe5F,KAAM4F,EAAenG,IAEnEoG,EAA+BtC,IAAmBuC,mBAAmB/G,GAG7E8G,EAA6BnB,IAAI,SAAUmB,EAA6Bd,OAAO,QAC/Ec,EAA6BnB,IAAI,WAAYmB,EAA6Bd,OAAO,UAGjFc,EAA6BnB,IAAI,YAAYmB,EAA6BvL,IAAI,UAAU0E,MAAMoE,KAAO,kBAGrG3B,EAASsE,MAAMF,GAKbzB,EAAgB4B,gBAGlBhF,EAAMY,IACJ,WACA,WAAOjB,UAAU,oBACf,YACGc,EAASC,UAAU1E,OAClB,YACE,EAAC,IAAD,CACE2D,UAAU,kBACV0C,gBAAgB,mCAChB4C,cAAc,uBACd7C,KAAK,oBACL8C,OAAQ,kBAAM,EAAKC,EAAE,qBAAqBC,SAAS,SACnDC,OAAQ,kBAAM,EAAKF,EAAE,qBAAqBG,YAAY,UAErD7E,EAASC,YAId,SAQZ6E,mBAASC,IAAKnL,UAAW,QAAQ,SAASoL,GAAU,WAE5CrC,EAAkBR,KAAKC,MAAMvE,IAAI+E,MAAMC,UAAU,8BAEjDtF,EAAQ1C,KAAKoK,eACnB1H,EAAM2B,UAAYrE,KAAKqK,QAAQ3H,EAAM2B,WAAWiG,KAAK,KAErD,IAAMnF,EAAWD,IAAaC,SAASnF,KAAK0C,MAAMiC,KAAM3E,MAGxD,GAAI8H,EAAgBuB,yBAA0B,CAE5C,GAAiC,IAA7BrJ,KAAK0C,MAAMiC,KAAKM,SAAgB,CAElC,IAAMqE,EAAiBtJ,KAAK0C,MAAMiC,KAAKf,KAAKD,cAAclB,WAAWmB,KAE/DnB,EAAaO,IAAIC,MAAMa,QAAQwF,EAAe5F,KAAM4F,EAAenG,IAEnEoG,EAA+BtC,IAAmBuC,mBAAmB/G,GAG7E8G,EAA6BnB,IAAI,SAAUmB,EAA6Bd,OAAO,QAC/Ec,EAA6BnB,IAAI,WAAYmB,EAA6Bd,OAAO,UAGjFc,EAA6BnB,IAAI,YAAYmB,EAA6BvL,IAAI,UAAU0E,MAAMoE,KAAO,kBAGrG3B,EAASsE,MAAMF,GAKf,OACE,YAAa7G,EACX,aACG1C,KAAKuE,UACN,WAAOF,UAAU,gBACf,YACGiC,IAAUtG,KAAKuK,cAAcnF,WAC7BD,EAASC,UAAU1E,OAClB,YACE,EAAC,IAAD,CACE2D,UAAU,gBACV0C,gBAAgB,mCAChB4C,cAAc,uBACd7C,KAAK,oBACL8C,OAAQ,kBAAM,EAAKC,EAAE,iBAAiBC,SAAS,SAC/CC,OAAQ,kBAAM,EAAKF,EAAE,iBAAiBG,YAAY,UAEjD7E,EAASC,YAId,KAIN,YAAQf,UAAU,eAChB,YAAKiC,IAAUtG,KAAKwK,cAAcpF,eAQ1C,OAAO+E,OCpIXvC,iBAAO6C,IAAmB1L,UAAW,QAAQ,SAAS2J,GAE5BpB,KAAKC,MAAMvE,IAAI+E,MAAMC,UAAU,8BAGnC0C,WAElBhC,EAAKE,SAAS,GAAGA,SAAS+B,SxBC9BV,mBAASW,IAAW7L,UAAW,QAAQ,SAASoL,GAK9C,GAHwB7C,KAAKC,MAAMvE,IAAI+E,MAAMC,UAAU,8BAGnC6C,eAAgB,CAClC,MAA0B7H,IAAlB8H,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,KAIjB,OACE,SACE1G,UAAW,2BAA6BrE,KAAK0C,MAAM2B,WAAa,IAChE2G,aAAcD,GAAQA,EAAKE,KAAKtM,KAAKoM,GACrCG,aAAcH,GAAQA,EAAKG,aAAavM,KAAKoM,IAG5CD,EAAQK,YAAc,CAACnL,KAAKoL,gBAAiBpL,KAAKqL,iBAAmB,CAxB5E,OAAGC,MAAM,8BAA8BhD,KAAK,wBAAwBhE,MAAM,WAAWiH,OAAO,QAAQ7H,KAAK,SAAS8H,OAAO,SACvH,OAAGF,MAAM,kCAuBuFtL,KAAKyL,oBAMrG,OAAOtB,OyBhCXvC,iBAAO8D,IAAW3M,UAAW,QAAQ,SAAS2J,GAEpBpB,KAAKC,MAAMvE,IAAI+E,MAAMC,UAAU,8BAGnC2D,WAElBjD,EAAKE,SAAS/E,KAAI,SAAC+H,GAEG,UAAhBA,EAAQlN,KAEVgK,EAAKE,SAAS+B,YCXtB/C,iBAAO6C,IAAmB1L,UAAW,aAAa,SAAS2F,GAEjC4C,KAAKC,MAAMvE,IAAI+E,MAAMC,UAAU,8BAGnC6D,cAEdnH,EAAM0D,IAAI,iBAEZ1D,EAAM+D,OAAO,mBzBTnBb,iBAAOoB,IAAejK,UAAW,UAAU,WAEjBuI,KAAKC,MAAMvE,IAAI+E,MAAMC,UAAU,8BAGnC+C,MAElB/H,IAAI+H,KAAKe,aAIblE,iBAAOoB,IAAejK,UAAW,YAAY,WAK3C,GAHwBuI,KAAKC,MAAMvE,IAAI+E,MAAMC,UAAU,8BAGnC+C,KAClB,cAAgB/K,KAAK+L,QAAQnD,YAA7B,aAAuC,KAA5BzL,EAA4B,QAEjB,wBAAhBA,EAAEkH,WAEFlH,EAAEsL,a0BtBVb,iBAAOC,IAAU9I,UAAW,gBAAgB,SAAU2F,GAC9CA,EAAM0D,IAAI,QACV1D,EAAM+D,OAAO,OAKjB,IAFA,IAAIuD,EAAShM,KAAKiM,SAASjM,MAAMoF,UAExBjI,EAAI,EAAGA,EAAI6O,EAAOtL,OAAQvD,IACJ,cAAvB6O,EAAO7O,GAAG+O,UACVF,EAAOG,OAAOhP,EAAI6O,EAAOtL,UAKjC,IAFA,IAAI0L,EAASpM,KAAKiM,SAASjM,MAAMoF,UAExBjI,EAAI,EAAGA,EAAIiP,EAAO1L,OAAQvD,IACJ,cAAvBiP,EAAOjP,GAAG+O,UACVE,EAAOD,OAAO,EAAGhP,EAAI,GAK7BuH,EAAMY,IACF,iBACA+G,IAAerH,UACb,CACE+B,gBAAiB,SACjB1C,UAAW,kCACX2C,sBAAuBhE,IAAIgD,WAAWC,MAAM,8DAE9C+F,IAIJtH,EAAMY,IACJ,iBACA+G,IAAerH,UACb,CACE+B,gBAAiB,SACjB1C,UAAW,kCACX2C,sBAAuBhE,IAAIgD,WAAWC,MAAM,8DAE9CmG,OC1BVnC,mBAASQ,IAAmB1L,UAAW,QAAQ,WAC3C,IAAM0D,EAAazC,KAAK0C,MAAMD,WACxB6J,EAAO7J,EAAW6J,OAClBC,EAAW9J,EAAW8J,WACtBC,EAAS/J,EAAW+J,SACpBC,GAAczM,KAAK0M,oBAAsBH,EAC3CI,EAAS,EACPxH,EAAW8B,IAAmB9B,SAAS1C,EAAYzC,MAAMoF,UACzD1C,EAAQ1C,KAAKoK,eAEnB,GAAIpK,KAAK0C,MAAMI,OAAO8J,EAAG,CACrB,IAAMjI,EAAOlC,EAAWoK,mBACpBlI,IACAgI,EAAShI,EAAKM,UAGlB,IAAM6H,EAAS5K,GAAalC,KAAK0C,MAAMI,OAAO8J,GAC9C5M,KAAK+M,gBAAkB,IAAI/K,OAAO8K,EAAS,IAAMA,EAAOE,OAAO3K,QAAQ,OAAQ,KAAM,WAErFsK,EAASM,KAAKC,IAAIzK,EAAW0K,kBAAmB1K,EAAW2K,sBAAwB,GAAK,GAM5F,IAHA,IAEIvB,EAiBAwB,EAnBAC,EAAOhH,IAAUtG,KAAKuN,YAAYnI,WAAW,GAGxCoI,EAAI,EAAGA,EAAIlH,IAAUtG,KAAKuN,YAAYnI,WAAW1E,OAAQ8M,IAC1DlH,IAAUtG,KAAKuN,YAAYnI,WAAWoI,GAAG9O,KACW,gBAAhD4H,IAAUtG,KAAKuN,YAAYnI,WAAWoI,GAAG9O,MACzCmN,EAAevF,IAAUtG,KAAKuN,YAAYnI,WAAWoI,IAmBjE,OAJIH,EADQ,GAARf,EACcA,EAAK1I,KAAK6D,WAAW4F,YAErB,SAGd,QAAS3K,EACJyC,EAASzE,OACJ+M,IAASzI,UACP,CACI8B,KAAM,oBACNzC,UAAW,8BACX0C,gBAAiB,kFACjBC,sBAAuBhE,IAAIgD,WAAWC,MAAM,oEAEhDd,GAEF,GAEN,UACId,UAAW,8EAAgFkI,EAAW,GAAK,aAC3GmB,QAAS1N,KAAK2N,WAAWhP,KAAKqB,OAE7B8G,IAAK,iBAGV,SAAKzC,UAAW,+CAAiDkI,EAAW,UAAY,KAAOC,EAAS,QAAU,KAU9G,EAAC,IAAD,CAAMlE,KAAMtF,IAAIuF,MAAM9F,WAAWA,EAAYkK,GAAStI,UAAU,8BAQ5D,SAAKA,UAAU,qCACX,QAAIA,UAAU,IAAIuJ,IApD9BnL,EAAWmB,KAAK6D,WAAWoG,MACpBpL,EAAWoL,QAEX,IAiD0C7N,KAAK+M,kBAC1C,OAAG1I,UAAU,IAAIrB,IAAIgD,WAAWC,MAAM,mCAG1C,SAAK5B,UAAU,qCACX,QAAIA,UAAU,IAAIuJ,IAAUnL,EAAWqL,eAAiB,EAAG9N,KAAK+M,kBAChE,OAAG1I,UAAU,IAAIrB,IAAIgD,WAAWC,MAAM,qCAG1C,SAAK5B,UAAU,qCACX,QAAIA,UAAU,IAAIuJ,IAAUnL,EAAWsL,YAAa/N,KAAK+M,kBACzD,OAAG1I,UAAU,IAAIrB,IAAIgD,WAAWC,MAAM,oCAK9C,QAAI5B,UAAU,oCAAoCiC,IAAU7D,EAAWuL,SAAS5I,YAEhF,EAAC,IAAD,CAAMkD,KAAMtF,IAAIuF,MAAM9F,WAAWA,EAAYkK,GAAStI,UAAU,2BAC5D,QAAIA,UAAU,4BAA4BuJ,IAAUnL,EAAW6B,QAAStE,KAAK+M,kBAE7E,QAAI1I,UAAU,2BAA2BiC,IAAUtG,KAAKuN,YAAYnI,WAAWkB,IAAUtG,KAAKuN,YAAYnI,WAAW1E,OAAS,IAC9H,SAAK2D,UAAU,sCACX,QAAIA,UAAU,gCAAgCiJ,GAI9C,SAAKjJ,UAAU,qCACX,EAAC,IAAD,CAAMA,UAAU,cAAciE,KAAMgE,EAAOtJ,IAAIuF,MAAM+D,KAAKA,GAAQ,KAC7D2B,IAAO3B,EAAM,CAAEhI,MAAO,KACvB,aACI,WAAI+I,GAEJ,WAAI/G,IAAUuF,SAOlC,UACIqC,SAAS,IACTC,KAAK,SACL9J,UAAU,2BACVqJ,QAAS1N,KAAK2N,WAAWhP,KAAKqB,MAC9BsE,MAAOmI,EAAazJ,IAAIgD,WAAWC,MAAM,mDAAqD,IAE7FmI,IAAiB3L,EAAWgK,EAAa,cAAgB,uBCpJ9E7E,iBAAOC,IAAU9I,UAAW,aAAa,SAAU2F,GAC3CA,EAAM0D,IAAI,SACZ1D,EAAM+D,OAAO,WAInBb,iBAAOC,IAAU9I,UAAW,eAAe,SAAU2F,GAEjDA,EAAMY,IACF,MACA+C,IAAWrD,UAAU,CACjBV,MAAO,MACPD,UAAW,yBACXiE,KAAM,iBAENtF,IAAIgD,WAAWC,MAAM,2CAI7BvB,EAAMY,IACF,QACA+C,IAAWrD,UAAU,CACjBV,MAAO,QACPD,UAAW,yBACXiE,KAAM,iBAENtF,IAAIgD,WAAWC,MAAM,8CCvBnC2B,iBAAO6C,IAAmB1L,UAAW,QAAQ,SAAU2J,GAErD,IAAMjG,EAAazC,KAAK0C,MAAMD,WAG9B,GAAIzC,KAAK0C,MAAMI,OAAO8J,EAAG,CACvB,IAAMjI,EAAOlC,EAAWoK,mBACpBlI,GACOA,EAAKM,SAGhB,IAAM6H,EAAS5K,KAAalC,KAAK0C,MAAMI,OAAO8J,GAC9C5M,KAAK+M,gBAAkB,IAAI/K,OAAO8K,EAAS,IAAMA,EAAOE,OAAO3K,QAAQ,OAAQ,KAAM,WAE5E4K,KAAKC,IAAIzK,EAAW0K,kBAAmB1K,EAAW2K,sBAAwB,GAAK,GAI1F,IAAMiB,EAAa3F,EAAKE,SAAS,GAAGA,SAAS,GAAGA,SAAS+B,MAEnD2D,EAAO5F,EAAKE,SAAS,GAAGA,SAAS,GAAGA,SAAS+B,MAEnDjC,EAAKE,SAAS,GAAGA,SAASuD,OAAO,EAAG,GAGpC,IAAMoC,EAAOhR,EAAE,2BAA4B,CAEzCmQ,QAAS1N,KAAKwO,UAAU7P,KAAKqB,OAC5B,CACDzC,EAAE,KAAM,CACN8G,UAAW,4BACVuJ,IAAUnL,EAAW6B,QAAStE,KAAK+M,kBACtCuB,EACAD,IAIF3F,EAAKE,SAAS,GAAGA,SAASuD,OAAO,EAAG,EAAGoC,MAMzC9D,IAAmB1L,UAAUyP,UAAY,WAGvCxL,KAAIyL,MAAMxD,KAAK3I,GAAc,CAC3BG,WAAYzC,KAAK0C,MAAMD,cCjD3BmF,iBAAOwB,IAAYrK,UAAW,WAAW,SAAU2J,GAKjD,GAJkC,IAA9BmB,EAAE,iBAAiBnJ,QAA4C,GAA5BV,KAAK0C,MAAMiC,KAAKM,UACrDyD,EAAKG,QAG2B,IAA9BgB,EAAE,iBAAiBnJ,QAA6C,IAA7BV,KAAK0C,MAAMiC,KAAKM,SACrD,IACEyD,EAAK,GAAGE,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGA,SAASC,QACjE,cAINoB,mBAAS1E,KAASxG,UAAW,QAAQ,SAAUoL,GAC7C,IACMmC,EADOtM,KAAK0C,MAAMiC,KACN2H,OAElB,OAAkC,IAA9BzC,EAAE,iBAAiBnJ,OAEnB,SAAK2D,UAAU,YACb,YACE,EAAC,KAAD,CAAMiE,KAAMtF,IAAIuF,MAAM+D,KAAKA,IACxBoC,KAAWpC,GACXqC,KAASrC,MAObnC,OChCTvC,iBAAOX,IAAoB,gBAAgB,SAAUvC,EAAOjC,EAAYmM,GAAS,WAC3EA,aAAmBtM,IACrBoC,EAAMY,IACJ,QACA7C,EAAWoM,WACPC,KAAO9J,UACP,CACE8B,KAAM,eACJ4G,QAAS,WAGP,OAAO,EAAKqB,YACTpQ,KAAK8D,EADD,EACa,GAAM,GADnB,OAEE,iBAGfO,IAAIgD,WAAWC,MACbjD,IAAIgM,QAAQ1C,KAAO,8CAAgD,0DAGrEwC,KAAO9J,UACP,CACE8B,KAAM,eACNzC,UAAW,WACXC,MAAOtB,IAAIgD,WAAWC,MAAM,qDAE9BjD,IAAIgD,WAAWC,MAAM,uDAEvB,WjBUN","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 45);\n","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['common/app'];","module.exports = flarum.core.compat['components/IndexPage'];","module.exports = flarum.core.compat['helpers/listItems'];","module.exports = flarum.core.compat['utils/DiscussionControls'];","module.exports = flarum.core.compat['components/DiscussionListItem'];","module.exports = flarum.core.compat['components/DiscussionPage'];","module.exports = flarum.core.compat['helpers/highlight'];","module.exports = flarum.core.compat['helpers/icon'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","module.exports = flarum.core.compat['components/LinkButton'];","module.exports = flarum.core.compat['utils/PostControls'];","module.exports = flarum.core.compat['components/Dropdown'];","module.exports = flarum.core.compat['components/CommentPost'];","module.exports = flarum.core.compat['components/PostUser'];","module.exports = flarum.core.compat['components/Link'];","module.exports = flarum.core.compat['components/PostStream'];","module.exports = flarum.core.compat['common/components/Link'];","module.exports = flarum.core.compat['common/helpers/username'];","module.exports = flarum.core.compat['common/helpers/userOnline'];","module.exports = flarum.core.compat['components/SelectDropdown'];","module.exports = flarum.core.compat['utils/ItemList'];","module.exports = flarum.core.compat['common/components/SplitDropdown'];","module.exports = flarum.core.compat['common/helpers/listItems'];","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['components/Navigation'];","module.exports = flarum.core.compat['components/Post'];","module.exports = flarum.core.compat['helpers/avatar'];","module.exports = flarum.core.compat['utils/abbreviateNumber'];","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","module.exports = flarum.core.compat['utils/escapeRegExp'];","module.exports = flarum.core.compat['components/Modal'];","module.exports = flarum.core.compat['components/LoadingPost'];","module.exports = flarum.core.compat['components/PostMeta'];","module.exports = flarum.core.compat['components/PostEdited'];","module.exports = flarum.core.compat['utils/extractText'];","module.exports = flarum.core.compat['utils/humanTime'];","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/*\r\n * This function add button to emoldova.org on header on main page\r\n */\r\n\r\nimport { override } from 'flarum/extend';\r\nimport Navigation from 'flarum/components/Navigation';\r\n\r\n// This is emoldova.org button\r\nfunction getEMoldovaButton() {\r\n  return (\r\n    <a class=\"Button Button--icon hasIcon\" href=\"https://emoldova.org/\" title=\"EMoldova\" active=\"false\" type=\"button\" target=\"_self\">\r\n      <i class=\"icon fas fa-home Button-icon\"></i>\r\n    </a>\r\n  );\r\n}\r\n\r\nexport default function () {\r\n  override(Navigation.prototype, 'view', function(original) {\r\n    // get all settings from Flarum API\r\n    const defaultSettings = JSON.parse(app.forum.attribute('block-cat.defaultSettings'));\r\n    \r\n    // check if is set '1' for EMoldova button\r\n    if (defaultSettings.emoldovaButton) {\r\n      const { history, pane } = app;\r\n      \r\n      // return result\r\n      // like original Flarum code\r\n      return (\r\n        <div\r\n          className={'Navigation ButtonGroup ' + (this.attrs.className || '')}\r\n          onmouseenter={pane && pane.show.bind(pane)}\r\n          onmouseleave={pane && pane.onmouseleave.bind(pane)}\r\n        >\r\n          {/* Add EMoldova button */}\r\n          {history.canGoBack() ? [this.getBackButton(), this.getPaneButton()] : [getEMoldovaButton(), this.getDrawerButton()]}\r\n        </div>\r\n      );\r\n    } else {\r\n      // if is set '0' for EMoldova button\r\n      // return original Flarum code\r\n      return original();\r\n    }\r\n  });\r\n};\r\n","/*\r\n * This function removes leftside pane on discussion page\r\n */\r\n\r\nimport { extend } from 'flarum/extend';\r\nimport DiscussionPage from 'flarum/components/DiscussionPage';\r\n\r\nexport default function () {\r\n  extend(DiscussionPage.prototype, 'oninit', function() {\r\n    // get all settings from Flarum API\r\n    const defaultSettings = JSON.parse(app.forum.attribute('block-cat.defaultSettings'));\r\n    \r\n    // check if is set '1' for pane\r\n    if (defaultSettings.pane) {\r\n      // disable pin button for pane \r\n      app.pane.disable();\r\n    }\r\n  });\r\n\r\n  extend(DiscussionPage.prototype, 'oncreate', function() {\r\n    // get all settings from Flarum API\r\n    const defaultSettings = JSON.parse(app.forum.attribute('block-cat.defaultSettings'));\r\n    \r\n    // check if is set '1' for pane\r\n    if (defaultSettings.pane) {\r\n      for (const i of this.element.children) {\r\n        // check classname for pane\r\n        if (i.className === 'DiscussionPage-list') {\r\n            // remove pane with discussions list\r\n            i.remove();\r\n        }\r\n      }\r\n    }\r\n  });\r\n};\r\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n","import toString from './toString.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n\n/**\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n */\nfunction escapeRegExp(string) {\n  string = toString(string);\n  return (string && reHasRegExpChar.test(string))\n    ? string.replace(reRegExpChar, '\\\\$&')\n    : string;\n}\n\nexport default escapeRegExp;\n","import Modal from \"flarum/components/Modal\";\r\nimport ItemList from 'flarum/utils/ItemList';\r\nimport PostLoading from 'flarum/components/LoadingPost';\r\nimport SplitDropdown from 'flarum/common/components/SplitDropdown';\r\nimport DiscussionControls from 'flarum/utils/DiscussionControls';\r\nimport listItems from 'flarum/common/helpers/listItems';\r\nimport PostControls from 'flarum/utils/PostControls';\r\nimport Link from 'flarum/common/components/Link';\r\nimport username from 'flarum/common/helpers/username';\r\nimport userOnline from 'flarum/common/helpers/userOnline';\r\nimport PostUser from 'flarum/components/PostUser';\r\nimport PostMeta from 'flarum/components/PostMeta';\r\nimport PostEdited from 'flarum/components/PostEdited';\r\n\r\nexport default class ArticleModal extends Modal {\r\n  oninit(vnode) {\r\n    super.oninit(vnode);\r\n\r\n    this.discussion = this.attrs.discussion;\r\n\r\n    this.includedPosts = [];\r\n\r\n    this.firstPostControls = [];\r\n\r\n    this.headerItemsFirstComment = '';\r\n\r\n    const params = this.requestParams();\r\n    app.store.find('discussions', this.discussion.id(), params)\r\n      .then((discussion) => {\r\n        // console.log(discussion);\r\n        if (discussion.payload && discussion.payload.included) {\r\n          let includedPosts = [];\r\n          const discussionId = discussion.id();\r\n    \r\n          includedPosts = discussion.payload.included\r\n            .filter(\r\n              (record) =>\r\n                record.type === 'posts' &&\r\n                record.relationships &&\r\n                record.relationships.discussion &&\r\n                record.relationships.discussion.data.id === discussionId\r\n            )\r\n            .map((record) => app.store.getById('posts', record.id))\r\n            .sort((a, b) => a.createdAt() - b.createdAt())\r\n            .slice(0, 20);\r\n\r\n          // return includedPosts;\r\n          this.setPosts(includedPosts);\r\n        }\r\n      });\r\n\r\n    // app.history.push('discussion');\r\n    // console.log(app);\r\n    // console.log(this);\r\n  }\r\n\r\n  className() {\r\n    return \"ArticleModal\";\r\n  }\r\n\r\n  title() {\r\n    return \"\";\r\n    // return this.discussion.title();\r\n  }\r\n\r\n  content() {\r\n    let lastTime;\r\n    // console.log(this.discussion);\r\n    // console.log(this.includedPosts);\r\n    const postIds = this.discussion.postIds();\r\n\r\n    const items = this.includedPosts.map((post, i) => {\r\n      let content;\r\n      const attrs = { 'data-index': i };\r\n\r\n      // console.log(attrs);\r\n      if (post) {\r\n        const time = post.createdAt();\r\n        const PostComponent = app.postComponents[post.contentType()];\r\n        content = PostComponent ? PostComponent.component({ post }) : '';\r\n        \r\n        if (post.number() == 1) {\r\n          this.firstPostControls = PostControls.controls(post, this).toArray();\r\n          \r\n          const items = new ItemList();\r\n          \r\n          items.add(\r\n            'user',\r\n            PostUser.component({\r\n              post,\r\n              oncardshow: () => {},\r\n              oncardhide: () => {},\r\n            }),\r\n            100\r\n          );\r\n\r\n          items.add(\r\n            'meta',\r\n            PostMeta.component({ post }),\r\n          );\r\n\r\n          if (post.isEdited() && !post.isHidden()) {\r\n            items.add('edited', PostEdited.component({ post }));\r\n          }\r\n\r\n          this.headerItemsFirstComment = items.toArray();\r\n          // console.log(this.headerItemsFirstComment);\r\n          // m.redraw();\r\n        }\r\n\r\n        attrs.key = 'post' + post.id();\r\n        attrs['data-time'] = time.toISOString();\r\n        attrs['data-number'] = post.number();\r\n        attrs['data-id'] = post.id();\r\n        attrs['data-type'] = post.contentType();\r\n\r\n        // If the post before this one was more than 4 days ago, we will\r\n        // display a 'time gap' indicating how long it has been in between\r\n        // the posts.\r\n        const dt = time - lastTime;\r\n\r\n        if (dt > 1000 * 60 * 60 * 24 * 4) {\r\n          content = [\r\n            <div className=\"PostStream-timeGap\">\r\n              <span>{app.translator.trans('core.forum.post_stream.time_lapsed_text', { period: dayjs().add(dt, 'ms').fromNow(true) })}</span>\r\n            </div>,\r\n            content,\r\n          ];\r\n        }\r\n\r\n        lastTime = time;\r\n      } else {\r\n        attrs.key = 'post' + postIds[i];\r\n\r\n        content = PostLoading.component();\r\n      }\r\n\r\n      return (\r\n        <div className=\"PostStream-item\" {...attrs}>\r\n          {content}\r\n        </div>\r\n      );\r\n    });\r\n\r\n    // console.log(this.firstPostControls);\r\n    // console.log(this.headerItemsFirstComment);\r\n\r\n    return [\r\n      <nav className=\"DiscussionPage-nav\">\r\n        <header className=\"Post-header\">\r\n          <ul>{listItems(this.headerItemsFirstComment)}</ul>\r\n        </header>\r\n        <ul>{listItems(this.articleItems().toArray())}</ul>\r\n      </nav>,\r\n      <div className=\"DiscussionPage-stream\">\r\n        <div className=\"Modal-header ArticleTitle\">\r\n          <h3 className=\"App-titleControl App-titleControl--text\">{this.discussion.title()}</h3>\r\n        </div>\r\n        <div className=\"PostStream\">{items}</div>\r\n      </div>\r\n    ]\r\n  }\r\n\r\n  setPosts(posts) {\r\n    // console.log(posts);\r\n    this.includedPosts = posts;\r\n    m.redraw();\r\n  }\r\n\r\n  /**\r\n   * Get the parameters that should be passed in the API request to get the\r\n   * discussion.\r\n   *\r\n   * @return {Object}\r\n   */\r\n   requestParams() {\r\n    return {\r\n      bySlug: true,\r\n      page: { near: this.near },\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Build an item list for the contents of the sidebar.\r\n   *\r\n   * @return {ItemList}\r\n   */\r\n   articleItems() {\r\n    const items = new ItemList();\r\n\r\n    items.add(\r\n      'articleControls',\r\n      SplitDropdown.component(\r\n        {\r\n          icon: 'fas fa-ellipsis-v',\r\n          className: 'App-primaryControl',\r\n          buttonClassName: 'Button--primary',\r\n          accessibleToggleLabel: app.translator.trans('core.forum.discussion_controls.toggle_dropdown_accessible_label'),\r\n        },\r\n        DiscussionControls.controls(this.discussion, this).toArray()\r\n      )\r\n    );\r\n\r\n    if (this.firstPostControls.length !== 0) {\r\n      items.add(\r\n        'commentControls',\r\n        SplitDropdown.component(\r\n          {\r\n            icon: 'fas fa-ellipsis-v',\r\n            className: 'App-primaryControl',\r\n            buttonClassName: 'Button--secondary',\r\n            accessibleToggleLabel: app.translator.trans('core.forum.discussion_controls.toggle_dropdown_accessible_label'),\r\n          },\r\n          this.firstPostControls\r\n        )\r\n      );\r\n    }\r\n\r\n    return items;\r\n  }\r\n}\r\n","import addEMoldovaButton from './settings/addEMoldovaButton';\r\nimport changeIconFromMenu from './settings/changeIconFromMenu';\r\nimport changePostControls from './settings/changePostControls';\r\nimport removeActionItems from './settings/removeActionItems';\r\nimport removeLeftsideMenu from './settings/removeLeftsideMenu';\r\nimport removePane from './settings/removePane';\r\nimport removePostCount from './settings/removePostCount';\r\nimport removeReplyPlaceholder from './settings/removeReplyPlaceholder';\r\nimport removeRightsideMenu from './settings/removeRightsideMenu';\r\nimport removeSidebarItems from './settings/removeSidebarItems';\r\nimport removeTerminalPost from './settings/removeTerminalPost';\r\nimport removeToolbar from './settings/removeToolbar';\r\nimport changePaths from './settings/changePaths';\r\n//vasia\r\nimport sidebarItems from './settings/sidebarItems.js';\r\nimport CardItem from './settings/CardItem.js';\r\nimport ActionItems from './settings/ActionItems.js';\r\n// added by BlockCat\r\nimport addArticleModal from './settings/addArticleModal';\r\nimport addReplyButtonModal from './settings/addReplyButtonModal';\r\nimport removeArticleHeaderModal from './settings/removeArticleHeaderModal';\r\n\r\napp.initializers.add('block-cat/portlet-ui', () => {\r\n  changePaths();\r\n  changeIconFromMenu();\r\n  removeLeftsideMenu();\r\n  removeToolbar();\r\n  removeActionItems();\r\n  removeRightsideMenu();\r\n  removeSidebarItems();\r\n  changePostControls();\r\n  removePostCount();\r\n  addEMoldovaButton();\r\n  removeReplyPlaceholder();\r\n  removeTerminalPost();\r\n  removePane();\r\n  //vasia\r\n  sidebarItems();\r\n  CardItem();\r\n  ActionItems();\r\n  // added by BlockCat\r\n  addArticleModal();\r\n  removeArticleHeaderModal();\r\n  addReplyButtonModal();\r\n}, -20);\r\n","export default function () {\r\n    // get all used Flarum routes\r\n    const routes = app.routes;\r\n    // get all routes defined in admin page\r\n    const routesCustom = JSON.parse(app.data.resources[0].attributes[\"block-cat.defaultRoutes\"]);\r\n    \r\n    // map all keys from Flarum routes\r\n    Object.keys(routes).map((key) => {\r\n        // check if key is specified in admin page\r\n        if (routesCustom.hasOwnProperty(key)) {\r\n            // check if key from admin page has value\r\n            if (routesCustom[key].path !== \"\") {\r\n                // set new path for specific key\r\n                app.routes[key].path = routesCustom[key].path;\r\n            }\r\n        }\r\n    });\r\n};\r\n","/*\r\n * This function change icon in sidebar menu for 'allDiscussions'\r\n */\r\n\r\nimport { extend } from 'flarum/extend';\r\nimport IndexPage from 'flarum/components/IndexPage';\r\nimport LinkButton from 'flarum/components/LinkButton';\r\n\r\nexport default function () {\r\n  extend(IndexPage.prototype, 'navItems', function(items) {\r\n    // get all settings from Flarum API\r\n    const defaultSettings = JSON.parse(app.forum.attribute('block-cat.defaultSettings'));\r\n    const params = app.search.stickyParams();\r\n    \r\n    // check if is set icon for main page menu\r\n    if (defaultSettings.allDiscussionsIcon !== \"\") {\r\n      // check if exists 'allDiscussions' item\r\n      if (items.has('allDiscussions')) {\r\n        // change 'allDiscussions' item\r\n        items.replace(\r\n          'allDiscussions',\r\n          LinkButton.component(\r\n            {\r\n              href: app.route('index', params),\r\n              // change the icon...\r\n              icon: defaultSettings.allDiscussionsIcon,\r\n            },\r\n            app.translator.trans('core.forum.index.all_discussions_link')\r\n          ),\r\n          100\r\n        );\r\n      }\r\n    }\r\n  });\r\n};\r\n","/*\r\n * This function removes leftside menu from main page\r\n */\r\n\r\nimport { extend } from 'flarum/extend';\r\nimport IndexPage from 'flarum/components/IndexPage';\r\n\r\nexport default function () {\r\n  extend(IndexPage.prototype, 'sidebarItems', function(items) {\r\n    // get all settings from Flarum API\r\n    const defaultSettings = JSON.parse(app.forum.attribute('block-cat.defaultSettings'));\r\n\r\n    // check if is set '1' for main page menu\r\n    if (defaultSettings.mainPageMenu) {\r\n      // check if exists 'nav' item\r\n      if (items.has('nav')) {\r\n        // remove 'nav' item\r\n        items.remove('nav');\r\n      }\r\n    }\r\n  });\r\n};\r\n","/*\r\n * This function removes tools bar from top of\r\n * discussions list on main page\r\n */\r\n\r\nimport { extend } from 'flarum/extend';\r\nimport IndexPage from 'flarum/components/IndexPage';\r\n\r\nexport default function () {\r\n  extend(IndexPage.prototype, 'view', function(view) {\r\n    // get all settings from Flarum API\r\n    const defaultSettings = JSON.parse(app.forum.attribute('block-cat.defaultSettings'));\r\n\r\n    // check if is set '1' for toolbar\r\n    if (defaultSettings.toolbar) {\r\n      // remove first element from 'view.children[1].children[0].children[1].children'\r\n      view.children[1].children[0].children[1].children.shift();\r\n    }\r\n  });\r\n};\r\n","/*\r\n * This function removes refresh button and\r\n * mark all as read button from top of\r\n * discussions list on main page\r\n */\r\n\r\nimport { extend } from 'flarum/extend';\r\nimport IndexPage from 'flarum/components/IndexPage';\r\n\r\nexport default function () {\r\n  extend(IndexPage.prototype, 'actionItems', function(items) {\r\n    // get all settings from Flarum API\r\n    const defaultSettings = JSON.parse(app.forum.attribute('block-cat.defaultSettings'));\r\n\r\n    // check if is set '1' for refresh button\r\n    if (defaultSettings.refreshButton) {\r\n      // check if exists 'refresh' item\r\n      if (items.has('refresh')) {\r\n        // remove 'refresh' item\r\n        items.remove('refresh');\r\n      }\r\n    }\r\n    // check if is set '1' for mark all as read button\r\n    if (defaultSettings.markAllAsReadButton) {\r\n      // check if exists 'markAllAsRead' item\r\n      if (items.has('markAllAsRead')) {\r\n        // remove 'markAllAsRead' item\r\n        items.remove('markAllAsRead');\r\n      }\r\n    }\r\n  });\r\n};\r\n","/*\r\n * This function removes rightside menu from discussion page\r\n */\r\n\r\nimport { extend } from 'flarum/extend';\r\nimport DiscussionPage from 'flarum/components/DiscussionPage';\r\n\r\nexport default function () {\r\n  extend(DiscussionPage.prototype, 'view', function(view) {\r\n    // get all settings from Flarum API\r\n    const defaultSettings = JSON.parse(app.forum.attribute('block-cat.defaultSettings'));\r\n    \r\n    // check if is set '1' for dicussion page menu\r\n    if (defaultSettings.discussionMenu) {\r\n      try {\r\n        // remove first element from 'view.children[1].children[1].children'\r\n        view.children[1].children[1].children.shift();\r\n      } catch {}\r\n    }\r\n  });\r\n};\r\n","/*\r\n * This function removes blue button from\r\n * rightside from discussion page and\r\n * what is below to this\r\n */\r\n\r\nimport { extend } from 'flarum/extend';\r\nimport DiscussionPage from 'flarum/components/DiscussionPage';\r\n\r\nexport default function () {\r\n  extend(DiscussionPage.prototype, 'sidebarItems', function(items) {\r\n    // get all settings from Flarum API\r\n    const defaultSettings = JSON.parse(app.forum.attribute('block-cat.defaultSettings'));\r\n\r\n    // check if is set '1' for controls button\r\n    if (defaultSettings.controlsButton) {\r\n      // check if exists 'controls' item\r\n      if (items.has('controls')) {\r\n        // remove 'controls' item\r\n        items.remove('controls');\r\n      }\r\n    }\r\n    // check if is set '1' for timeline\r\n    if (defaultSettings.scrubberDiv) {\r\n      // check if exists 'scrubber' item\r\n      if (items.has('scrubber')) {\r\n        // remove 'scrubber' item\r\n        items.remove('scrubber');\r\n      }\r\n    }\r\n  });\r\n};\r\n","/*\r\n * This function duplicates Post Controls on header\r\n * if posts are very large and merge Discussion Controls\r\n * with Post Controls for first post in discussion\r\n */\r\n\r\nimport { extend, override } from 'flarum/extend';\r\nimport CommentPost from 'flarum/components/CommentPost';\r\nimport PostControls from 'flarum/utils/PostControls';\r\nimport Dropdown from 'flarum/components/Dropdown';\r\nimport DiscussionControls from 'flarum/utils/DiscussionControls';\r\nimport Post from 'flarum/components/Post';\r\nimport listItems from 'flarum/helpers/listItems';\r\n\r\nexport default function () {\r\n  extend(CommentPost.prototype, 'headerItems', function(items) {\r\n    // get all settings from Flarum API\r\n    const defaultSettings = JSON.parse(app.forum.attribute('block-cat.defaultSettings'));\r\n    // get all PostControls\r\n    const controls = PostControls.controls(this.attrs.post, this);\r\n\r\n    // check if is set '1' for mergging controls\r\n    if (defaultSettings.discussionControlsToPost) {\r\n      // check if is first post\r\n      if (this.attrs.post.number() === 1) {\r\n        // get type and id of discussion from post info\r\n        const discussionData = this.attrs.post.data.relationships.discussion.data;\r\n        // get current discussion from Flarum API\r\n        const discussion = app.store.getById(discussionData.type, discussionData.id);\r\n        // get moderation controls for current discussion\r\n        const discussionModerationControls = DiscussionControls.moderationControls(discussion);\r\n        \r\n        // remove unneeded controls for discussion\r\n      discussionModerationControls.has('lock') ? discussionModerationControls.remove('lock') : '';\r\n      discussionModerationControls.has('sticky') ? discussionModerationControls.remove('sticky') : '';\r\n\r\n      // change icon for 'rename' control\r\n      discussionModerationControls.has('rename') ? discussionModerationControls.get('rename').attrs.icon = 'fas fa-heading' : '';\r\n\r\n      // merge all controls in one list\r\n      controls.merge(discussionModerationControls);\r\n      }\r\n    }\r\n\r\n    // check if is set '1' for duplication\r\n    if (defaultSettings.postControlsUp) {\r\n      // add item 'controls' on post header\r\n      // like in original Flarum code\r\n      items.add(\r\n        'controls',\r\n        <aside className=\"Post-actions-top\">\r\n          <ul>\r\n            {controls.toArray().length ? (\r\n              <li>\r\n                <Dropdown\r\n                  className=\"Post-controls-h\"\r\n                  buttonClassName=\"Button Button--icon Button--flat\"\r\n                  menuClassName=\"Dropdown-menu--right\"\r\n                  icon=\"fas fa-ellipsis-h\"\r\n                  onshow={() => this.$(\".Post-actions-top\").addClass(\"open\")}\r\n                  onhide={() => this.$(\".Post-actions-top\").removeClass(\"open\")}\r\n                >\r\n                  {controls.toArray()}\r\n                </Dropdown>\r\n              </li>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </ul>\r\n        </aside>\r\n      );\r\n    }\r\n  });\r\n\r\n  override(Post.prototype, 'view', function(original) {\r\n    // get all settings from Flarum API\r\n    const defaultSettings = JSON.parse(app.forum.attribute('block-cat.defaultSettings'));\r\n    // code from Flarum\r\n    const attrs = this.elementAttrs();\r\n    attrs.className = this.classes(attrs.className).join(' ');\r\n    // get all PostControls\r\n    const controls = PostControls.controls(this.attrs.post, this);\r\n\r\n    // check if is set '1' for mergging controls\r\n    if (defaultSettings.discussionControlsToPost) {\r\n      // check if is first post\r\n      if (this.attrs.post.number() === 1) {\r\n        // get type and id of discussion from post info\r\n        const discussionData = this.attrs.post.data.relationships.discussion.data;\r\n        // get current discussion from Flarum API\r\n        const discussion = app.store.getById(discussionData.type, discussionData.id);\r\n        // get moderation controls option for current discussion\r\n        const discussionModerationControls = DiscussionControls.moderationControls(discussion);\r\n        \r\n        // remove unneeded controls for discussion\r\n      discussionModerationControls.has('lock') ? discussionModerationControls.remove('lock') : '';\r\n      discussionModerationControls.has('sticky') ? discussionModerationControls.remove('sticky') : '';\r\n\r\n      // change icon for 'rename' control\r\n      discussionModerationControls.has('rename') ? discussionModerationControls.get('rename').attrs.icon = 'fas fa-heading' : '';\r\n\r\n      // merge all controls in one list\r\n      controls.merge(discussionModerationControls);\r\n      }\r\n\r\n      // return result\r\n      // like in original Flarum code\r\n      return (\r\n        <article {...attrs}>\r\n          <div>\r\n            {this.content()}\r\n            <aside className=\"Post-actions\">\r\n              <ul>\r\n                {listItems(this.actionItems().toArray())}\r\n                {controls.toArray().length ? (\r\n                  <li>\r\n                    <Dropdown\r\n                      className=\"Post-controls\"\r\n                      buttonClassName=\"Button Button--icon Button--flat\"\r\n                      menuClassName=\"Dropdown-menu--right\"\r\n                      icon=\"fas fa-ellipsis-h\"\r\n                      onshow={() => this.$('.Post-actions').addClass('open')}\r\n                      onhide={() => this.$('.Post-actions').removeClass('open')}\r\n                    >\r\n                      {controls.toArray()}\r\n                    </Dropdown>\r\n                  </li>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </ul>\r\n            </aside>\r\n            <footer className=\"Post-footer\">\r\n              <ul>{listItems(this.footerItems().toArray())}</ul>\r\n            </footer>\r\n          </div>\r\n        </article>\r\n      );\r\n    } else {\r\n      // if is set '0' for mergging controls\r\n      // return original Flarum code\r\n      return original();\r\n    }\r\n  });\r\n};\r\n","/*\r\n * This function removes number of posts\r\n * from every discussion on main page\r\n */\r\n\r\nimport { extend } from 'flarum/extend';\r\nimport DiscussionListItem from 'flarum/components/DiscussionListItem';\r\n\r\nexport default function () {\r\n  extend(DiscussionListItem.prototype, 'view', function(view) {\r\n    // get all settings from Flarum API\r\n    const defaultSettings = JSON.parse(app.forum.attribute('block-cat.defaultSettings'));\r\n\r\n    // check if is set '1' for post count\r\n    if (defaultSettings.postCount) {\r\n      // remove last element from 'view.children[2].children'\r\n      view.children[2].children.pop();\r\n    }\r\n  });\r\n};\r\n","/*\r\n * This function removes area for posting from end of posts on discussion page\r\n */\r\n\r\nimport { extend } from 'flarum/extend';\r\nimport PostStream from 'flarum/components/PostStream';\r\n\r\nexport default function () {\r\n  extend(PostStream.prototype, 'view', function(view) {\r\n    // get all settings from Flarum API\r\n    const defaultSettings = JSON.parse(app.forum.attribute('block-cat.defaultSettings'));\r\n\r\n    // check if is set '1' for post reply\r\n    if (defaultSettings.postReply) {\r\n      // map all children of 'view'\r\n      view.children.map((discuss) => {\r\n        // check if exists post with key 'reply'\r\n        if (discuss.key === 'reply') {\r\n          // remove last element from 'view.children'\r\n          view.children.pop();\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n","/*\r\n * This function removes last action info from every discussion on main page\r\n */\r\n\r\nimport { extend } from 'flarum/extend';\r\nimport DiscussionListItem from 'flarum/components/DiscussionListItem';\r\n\r\nexport default function () {\r\n  extend(DiscussionListItem.prototype, 'infoItems', function(items) {\r\n    // get all settings from Flarum API\r\n    const defaultSettings = JSON.parse(app.forum.attribute('block-cat.defaultSettings'));\r\n\r\n    // check if is set '1' for terminal post\r\n    if (defaultSettings.terminalPost) {\r\n      // check if exists 'terminalPost' item\r\n      if (items.has('terminalPost')) {\r\n        // remove 'terminalPost' item\r\n        items.remove('terminalPost');\r\n      }\r\n    }\r\n  });\r\n};\r\n","import app from 'flarum/common/app';\r\nimport { extend, override } from 'flarum/extend';\r\nimport IndexPage from 'flarum/components/IndexPage';\r\nimport SelectDropdown from 'flarum/components/SelectDropdown';\r\n\r\nexport default function () {\r\n\r\n    extend(IndexPage.prototype, 'sidebarItems', function (items) {\r\n        if (items.has('nav')) {\r\n            items.remove('nav');\r\n        }\r\n\r\n        let items1 = this.navItems(this).toArray();\r\n\r\n        for (let i = 0; i < items1.length; i++) {\r\n            if (items1[i].itemName === \"separator\") {\r\n                items1.splice(i , items1.length --);\r\n            }\r\n        }\r\n        let items2 = this.navItems(this).toArray();\r\n\r\n        for (let i = 0; i < items2.length; i++) {\r\n            if (items2[i].itemName === \"separator\") {\r\n                items2.splice(0, i + 1);\r\n            }\r\n        }\r\n        \r\n\r\n        items.add(\r\n            'nav_Navigation',\r\n            SelectDropdown.component(\r\n              {\r\n                buttonClassName: 'Button',\r\n                className: 'App-titleControl nav_Navigation',\r\n                accessibleToggleLabel: app.translator.trans('core.forum.index.toggle_sidenav_dropdown_accessible_label'),\r\n              },\r\n              items1\r\n            )\r\n          );\r\n\r\n          items.add(\r\n            'nav_Categories',\r\n            SelectDropdown.component(\r\n              {\r\n                buttonClassName: 'Button',\r\n                className: 'App-titleControl nav_Navigation',\r\n                accessibleToggleLabel: app.translator.trans('core.forum.index.toggle_sidenav_dropdown_accessible_label'),\r\n              },\r\n              items2\r\n            )\r\n          );\r\n    })\r\n\r\n}","import app from 'flarum/common/app';\r\nimport { extend, override } from 'flarum/extend';\r\nimport DiscussionListItem from 'flarum/components/DiscussionListItem';\r\nimport DiscussionControls from 'flarum/utils/DiscussionControls';\r\nimport Dropdown from 'flarum/components/Dropdown';\r\nimport icon from 'flarum/helpers/icon';\r\nimport Link from 'flarum/components/Link';\r\nimport extractText from 'flarum/utils/extractText';\r\nimport humanTime from 'flarum/utils/humanTime';\r\nimport avatar from 'flarum/helpers/avatar';\r\nimport listItems from 'flarum/helpers/listItems';\r\nimport highlight from 'flarum/helpers/highlight';\r\nimport abbreviateNumber from 'flarum/utils/abbreviateNumber';\r\n\r\nimport { escapeRegExp } from 'lodash-es';\r\nexport default function () {\r\n\r\n    /* extend(DiscussionListItem.prototype, 'view', function (items) {\r\n        let elem = items.children[items.children.length - 1];\r\n        console.log(elem);\r\n    }) */\r\n\r\n    override(DiscussionListItem.prototype, 'view', function () {\r\n        const discussion = this.attrs.discussion;\r\n        const user = discussion.user();\r\n        const isUnread = discussion.isUnread();\r\n        const isRead = discussion.isRead();\r\n        const showUnread = !this.showRepliesCount() && isUnread;\r\n        let jumpTo = 0;\r\n        const controls = DiscussionControls.controls(discussion, this).toArray();\r\n        const attrs = this.elementAttrs();\r\n\r\n        if (this.attrs.params.q) {\r\n            const post = discussion.mostRelevantPost();\r\n            if (post) {\r\n                jumpTo = post.number();\r\n            }\r\n\r\n            const phrase = escapeRegExp(this.attrs.params.q);\r\n            this.highlightRegExp = new RegExp(phrase + '|' + phrase.trim().replace(/\\s+/g, '|'), 'gi');\r\n        } else {\r\n            jumpTo = Math.min(discussion.lastPostNumber(), (discussion.lastReadPostNumber() || 0) + 1);\r\n        }\r\n\r\n        let tags = listItems(this.infoItems().toArray())[0];\r\n\r\n        let terminalPost;\r\n        for (let x = 0; x < listItems(this.infoItems().toArray()).length; x++) {\r\n            if (listItems(this.infoItems().toArray())[x].key) {\r\n                if (listItems(this.infoItems().toArray())[x].key == \"terminalPost\") {\r\n                    terminalPost = listItems(this.infoItems().toArray())[x];\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        function likes() {\r\n            if (discussion.data.attributes.votes) {\r\n                return discussion.votes()\r\n            } else {\r\n                return \"0\"\r\n            }\r\n        }\r\n        let displayName;\r\n        if (user != false) {\r\n            displayName = user.data.attributes.displayName;\r\n        } else {\r\n            displayName = \"anonim\";\r\n        }\r\n        return (\r\n            <div {...attrs}>\r\n                {controls.length\r\n                    ? Dropdown.component(\r\n                        {\r\n                            icon: 'fas fa-ellipsis-v',\r\n                            className: 'DiscussionListItem-controls',\r\n                            buttonClassName: 'Button Button--icon Button--flat Slidable-underneath Slidable-underneath--right',\r\n                            accessibleToggleLabel: app.translator.trans('core.forum.discussion_controls.toggle_dropdown_accessible_label'),\r\n                        },\r\n                        controls\r\n                    )\r\n                    : ''}\r\n\r\n                <span\r\n                    className={'Slidable-underneath Slidable-underneath--left Slidable-underneath--elastic' + (isUnread ? '' : ' disabled')}\r\n                    onclick={this.markAsRead.bind(this)}\r\n                >\r\n                    {icon('fas fa-check')}\r\n                </span>\r\n\r\n                <div className={'DiscussionListItem-content Slidable-content' + (isUnread ? ' unread' : '') + (isRead ? ' read' : '')}>\r\n                    {/* <Tooltip\r\n                        text={app.translator.trans('core.forum.discussion_list.started_text', { user, ago: humanTime(discussion.createdAt()) })}\r\n                        position=\"right\"\r\n                    >\r\n                        <Link className=\"DiscussionListItem-author\" href={user ? app.route.user(user) : '#'}>\r\n                            {avatar(user, { title: '' })}\r\n                        </Link>\r\n                    </Tooltip> */}\r\n\r\n                    <Link href={app.route.discussion(discussion, jumpTo)} className=\"DiscussionListItem-options\">\r\n\r\n                        {/* <div className=\"DiscussionListItem-options-blocks\">\r\n                            <Link className=\"\" href={user ? app.route.user(user) : '#'}>\r\n                                {avatar(user, { title: '' })}\r\n                            </Link>\r\n                        </div> */}\r\n\r\n                        <div className=\"DiscussionListItem-options-blocks\">\r\n                            <h3 className=\"\">{highlight(likes(), this.highlightRegExp)}</h3>\r\n                            <p className=\"\">{app.translator.trans('block-cat-default.forum.likes')}</p>\r\n                        </div>\r\n\r\n                        <div className=\"DiscussionListItem-options-blocks\">\r\n                            <h3 className=\"\">{highlight(discussion.commentCount() - 1, this.highlightRegExp)}</h3>\r\n                            <p className=\"\">{app.translator.trans('block-cat-default.forum.answers')}</p>\r\n                        </div>\r\n\r\n                        <div className=\"DiscussionListItem-options-blocks\">\r\n                            <h3 className=\"\">{highlight(discussion.viewCount(), this.highlightRegExp)}</h3>\r\n                            <p className=\"\">{app.translator.trans('block-cat-default.forum.views')}</p>\r\n                        </div>\r\n\r\n                    </Link>\r\n\r\n                    <ul className=\"DiscussionListItem-badges badges\">{listItems(discussion.badges().toArray())}</ul>\r\n\r\n                    <Link href={app.route.discussion(discussion, jumpTo)} className=\"DiscussionListItem-main\">\r\n                        <h3 className=\"DiscussionListItem-title\">{highlight(discussion.title(), this.highlightRegExp)}</h3>\r\n\r\n                        <ul className=\"DiscussionListItem-info\">{listItems(this.infoItems().toArray())[listItems(this.infoItems().toArray()).length - 1]}</ul>\r\n                        <div className=\"DiscussionListItem_tags_and_author\">\r\n                            <ul className=\"DiscussionListItem-info-tags\">{tags}</ul>\r\n                            {/* <div className=\"div_button_citeste_mai_mult\">\r\n                                <button className=\"button_citeste_mai_mult\">{app.translator.trans('block-cat-default.forum.button_citeste_mai_mult')}</button>\r\n                            </div> */}\r\n                            <div className=\"DiscussionListItem-options-author\">\r\n                                <Link className=\"author-link\" href={user ? app.route.user(user) : '#'}>\r\n                                    {avatar(user, { title: '' })}\r\n                                    <div>\r\n                                        <p>{displayName}\r\n                                        </p>\r\n                                        <p>{listItems(terminalPost)}</p>\r\n                                    </div>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n\r\n                    <span\r\n                        tabindex=\"0\"\r\n                        role=\"button\"\r\n                        className=\"DiscussionListItem-count\"\r\n                        onclick={this.markAsRead.bind(this)}\r\n                        title={showUnread ? app.translator.trans('core.forum.discussion_list.mark_as_read_tooltip') : ''}\r\n                    >\r\n                        {abbreviateNumber(discussion[showUnread ? 'unreadCount' : 'replyCount']())}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        );\r\n    });\r\n}","import app from 'flarum/common/app';\r\nimport { extend, override } from 'flarum/extend';\r\nimport IndexPage from 'flarum/components/IndexPage';\r\nimport LinkButton from 'flarum/components/LinkButton';\r\n\r\nexport default function () {\r\n\r\n\r\n    extend(IndexPage.prototype, 'viewItems', function (items) {\r\n        if (items.has('sort')) {\r\n          items.remove('sort');\r\n        }\r\n    })\r\n\r\n    extend(IndexPage.prototype, 'actionItems', function (items) {\r\n\r\n        items.add(\r\n            'Noi',\r\n            LinkButton.component({\r\n                title: \"Noi\",\r\n                className: 'Button Button--primary',\r\n                href: '/?sort=newest',\r\n            },\r\n                app.translator.trans('block-cat-default.forum.sort_button_3')\r\n            )\r\n        );\r\n\r\n        items.add(\r\n            'Vechi',\r\n            LinkButton.component({\r\n                title: \"Vechi\",\r\n                className: 'Button Button--primary',\r\n                href: '/?sort=oldest',\r\n            },\r\n                app.translator.trans('block-cat-default.forum.sort_button_4')\r\n            )\r\n        );\r\n\r\n\r\n\r\n\r\n    });\r\n\r\n}","import { extend, override } from 'flarum/extend';\r\nimport app from 'flarum/app';\r\nimport DiscussionListItem from 'flarum/components/DiscussionListItem';\r\nimport PostStream from 'flarum/components/PostStream';\r\nimport highlight from 'flarum/helpers/highlight';\r\nimport escapeRegExp from 'flarum/utils/escapeRegExp';\r\n\r\nimport ArticleModal from '../components/ArticleModal';\r\n\r\nexport default function () {\r\n  // console.log(app);\r\n  extend(DiscussionListItem.prototype, 'view', function (view) {\r\n    // get needed data\r\n    const discussion = this.attrs.discussion;\r\n    let jumpTo = 0;\r\n\r\n    if (this.attrs.params.q) {\r\n      const post = discussion.mostRelevantPost();\r\n      if (post) {\r\n        jumpTo = post.number();\r\n      }\r\n\r\n      const phrase = escapeRegExp(this.attrs.params.q);\r\n      this.highlightRegExp = new RegExp(phrase + '|' + phrase.trim().replace(/\\s+/g, '|'), 'gi');\r\n    } else {\r\n      jumpTo = Math.min(discussion.lastPostNumber(), (discussion.lastReadPostNumber() || 0) + 1);\r\n    }\r\n\r\n    // extract container with tags_autor from Vasile modification\r\n    const tags_autor = view.children[2].children[2].children.pop();\r\n    // extract container with info from Vasile modification\r\n    const info = view.children[2].children[2].children.pop();\r\n    // remove DiscussionListItem-main container\r\n    view.children[2].children.splice(2, 1);\r\n\r\n    // create new DiscussionListItem-main container\r\n    const main = m('.DiscussionListItem-main', {\r\n      // onclick should open modal\r\n      onclick: this.openModal.bind(this),\r\n    }, [\r\n      m('h3', {\r\n        className: 'DiscussionListItem-title',\r\n      }, highlight(discussion.title(), this.highlightRegExp)),\r\n      info,\r\n      tags_autor,\r\n    ]);\r\n\r\n    // add new DiscussionListItem-main container in structure\r\n    view.children[2].children.splice(2, 0, main);\r\n\r\n    // console.log(main);\r\n    // console.log(view.children[2].children[2]);\r\n  });\r\n\r\n  DiscussionListItem.prototype.openModal = function () {\r\n    // console.log(this.attrs.discussion);\r\n    // const discussion = this.attrs.discussion;\r\n    app.modal.show(ArticleModal, {\r\n      discussion: this.attrs.discussion,\r\n    });\r\n  };\r\n}","import app from 'flarum/common/app';\r\nimport { extend, override } from 'flarum/extend';\r\nimport CommentPost from 'flarum/components/CommentPost';\r\nimport PostUser from 'flarum/components/PostUser';\r\nimport Link from 'flarum/common/components/Link';\r\nimport username from 'flarum/common/helpers/username';\r\nimport userOnline from 'flarum/common/helpers/userOnline';\r\n\r\nexport default function () {\r\n  extend(CommentPost.prototype, 'content', function (view) {\r\n    if ($('.ArticleModal').length !== 0 && this.attrs.post.number() == 1) {\r\n      view.shift();\r\n    }\r\n\r\n    if ($('.ArticleModal').length !== 0 && this.attrs.post.number() !== 1) {\r\n      try {\r\n        view[0].children[0].children[0].children[0].children[0].children.shift();\r\n      } catch {}\r\n    }\r\n  });\r\n\r\n  override(PostUser.prototype, 'view', function (original) {\r\n    const post = this.attrs.post;\r\n    const user = post.user();\r\n\r\n    if ($('.ArticleModal').length !== 0) {\r\n      return (\r\n        <div className=\"PostUser\">\r\n          <h3>\r\n            <Link href={app.route.user(user)}>\r\n              {userOnline(user)}\r\n              {username(user)}\r\n            </Link>\r\n          </h3>\r\n      </div>\r\n      );\r\n    }\r\n\r\n    return original();\r\n  });\r\n}","import { extend } from 'flarum/extend';\r\nimport Button from 'flarum/common/components/Button';\r\nimport DiscussionControls from 'flarum/utils/DiscussionControls';\r\nimport ArticleModal from '../components/ArticleModal';\r\n\r\nexport default function () {\r\n  extend(DiscussionControls, 'userControls', function (items, discussion, context) {\r\n    if (context instanceof ArticleModal) {\r\n      items.add(\r\n        'reply',\r\n        discussion.canReply()\r\n          ? Button.component(\r\n            {\r\n              icon: 'fas fa-reply',\r\n                onclick: () => {\r\n                  // If the user is not logged in, the promise rejects, and a login modal shows up.\r\n                  // Since that's already handled, we dont need to show an error message in the console.\r\n                  return this.replyAction\r\n                    .bind(discussion)(true, false)\r\n                    .catch(() => {});\r\n                },\r\n            },\r\n            app.translator.trans(\r\n              app.session.user ? 'core.forum.discussion_controls.reply_button' : 'core.forum.discussion_controls.log_in_to_reply_button'\r\n            )\r\n          )\r\n          : Button.component(\r\n            {\r\n              icon: 'fas fa-reply',\r\n              className: 'disabled',\r\n              title: app.translator.trans('core.forum.discussion_controls.cannot_reply_text'),\r\n            },\r\n            app.translator.trans('core.forum.discussion_controls.cannot_reply_button')\r\n          ),\r\n          100\r\n      );\r\n    }\r\n  });\r\n}"],"sourceRoot":""}